# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: '17'
        cache: 'maven'

    # from https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven
    - name: Build and Test with Maven
      timeout-minutes: 15
      run: mvn -B test
      

    - name: Package with Maven
      run: mvn -B clean package -DskipTests

    - name: Prepare universal package
      shell: bash
      run: |
        mkdir -p target/universal-package &&
        cp src/main/package/avrdude.* src/main/package/firmware*.hex src/main/package/*.bat src/main/package/start* src/main/package/thankyou.* target/universal-package/ &&
        cp CONTRIBUTING.md LICENSE README.md target/universal-package/ &&
        cp target/Makelangelo-*-with-dependencies.jar target/universal-package/ &&
        cd target/universal-package/ &&
        7z a -tzip Makelangelo.zip . &&
        mv Makelangelo.zip ../..
    - name: Deploy universal release
      if: github.repository == 'MarginallyClever/Makelangelo-software' && github.ref == 'refs/heads/master'
      uses: WebFreak001/deploy-nightly@v1.1.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # automatically provided by github actions
      with:
        upload_url: ${{ env.UPLOAD_URL }}
        release_id: ${{ env.RELEASE_ID }}{
        asset_path: Makelangelo.zip # path to archive to upload
        asset_name: Makelangelo-nightly-$$.zip # name to upload the release as, use $$ to insert date (YYYYMMDD) and 6 letter commit hash
        asset_content_type: application/zip # required by GitHub API
        max_releases: 1 # optional, if there are more releases than this matching the asset_name, the oldest ones are going to be deleted

    - name: Upload artifact for package
      uses: actions/upload-artifact@v2
      with:
        name: jar
        retention-days: 1
        path: |
          src/main/package/jpackage*
          src/main/package/logo*
          LICENSE
          target/package/*
